public final class io/getstream/chat/android/offline/realm/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class io/getstream/chat/ui/sample/realm/entity/SyncStatusCodeEntityKt {
	public static final fun toDomain (I)Lio/getstream/chat/android/client/utils/SyncStatus;
	public static final fun toRealm (Lio/getstream/chat/android/client/utils/SyncStatus;)I
}

public final class io/getstream/realm/initialization/InitializationKt {
	public static final fun configureRealm ()Lio/realm/kotlin/Realm;
}

public final class io/getstream/realm/repository/RealmChannelRepository : io/getstream/chat/android/client/persistance/repository/ChannelRepository {
	public fun <init> (Lio/realm/kotlin/Realm;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun clearChannelCache ()V
	public fun deleteChannel (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun evictChannel (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertChannel (Lio/getstream/chat/android/client/models/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertChannels (Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectAllCids (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectChannelByCid (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectChannelCidsBySyncNeeded (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectChannelWithoutMessages (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectChannels (Ljava/util/List;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectChannelsByCids (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectChannelsSyncNeeded (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMembersForChannel (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setChannelDeletedAt (Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setHiddenForChannel (Ljava/lang/String;ZLjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setHiddenForChannel (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun updateLastMessageForChannel (Ljava/lang/String;Lio/getstream/chat/android/client/models/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun updateMembersForChannel (Ljava/lang/String;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/realm/repository/RealmMessageRepository : io/getstream/chat/android/client/persistance/repository/MessageRepository {
	public fun <init> (Lio/realm/kotlin/Realm;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteChannelMessage (Lio/getstream/chat/android/client/models/Message;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteChannelMessagesBefore (Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertMessage (Lio/getstream/chat/android/client/models/Message;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertMessages (Ljava/util/List;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMessage (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMessageBySyncState (Lio/getstream/chat/android/client/utils/SyncStatus;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMessageIdsBySyncState (Lio/getstream/chat/android/client/utils/SyncStatus;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMessages (Ljava/util/List;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMessagesForChannel (Ljava/lang/String;Lio/getstream/chat/android/client/query/pagination/AnyChannelPaginationRequest;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectMessagesForThread (Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/realm/repository/RealmQueryChannelsRepository : io/getstream/chat/android/client/persistance/repository/QueryChannelsRepository {
	public fun <init> (Lio/realm/kotlin/Realm;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertQueryChannels (Lio/getstream/chat/android/client/query/QueryChannelsSpec;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectBy (Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/querysort/QuerySorter;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/realm/repository/RealmUserRepository : io/getstream/chat/android/client/persistance/repository/UserRepository {
	public fun <init> (Lio/realm/kotlin/Realm;)V
	public fun clear (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertCurrentUser (Lio/getstream/chat/android/client/models/User;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertUser (Lio/getstream/chat/android/client/models/User;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertUsers (Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun observeLatestUsers ()Lkotlinx/coroutines/flow/StateFlow;
	public fun selectAllUsers (IILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectUser (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectUsers (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectUsersLikeName (Ljava/lang/String;IILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/realm/repository/factory/RealmRepositoryFactory : io/getstream/chat/android/client/persistance/repository/factory/RepositoryFactory {
	public fun <init> (Lio/realm/kotlin/Realm;)V
	public fun createAttachmentRepository ()Lio/getstream/chat/android/client/persistance/repository/AttachmentRepository;
	public fun createChannelConfigRepository ()Lio/getstream/chat/android/client/persistance/repository/ChannelConfigRepository;
	public fun createChannelRepository (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)Lio/getstream/chat/android/client/persistance/repository/ChannelRepository;
	public fun createMessageRepository (Lkotlin/jvm/functions/Function2;)Lio/getstream/chat/android/client/persistance/repository/MessageRepository;
	public fun createQueryChannelsRepository ()Lio/getstream/chat/android/client/persistance/repository/QueryChannelsRepository;
	public fun createReactionRepository (Lkotlin/jvm/functions/Function2;)Lio/getstream/chat/android/client/persistance/repository/ReactionRepository;
	public fun createSyncStateRepository ()Lio/getstream/chat/android/client/persistance/repository/SyncStateRepository;
	public fun createUserRepository ()Lio/getstream/chat/android/client/persistance/repository/UserRepository;
}


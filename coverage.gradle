apply plugin: 'jacoco'

def isCore = (name == 'stream-chat-android-core')
def testTask = isCore ? "test" : "testDebugUnitTest"
def jacocoResults = "${buildDir}/reports/jacoco/report.xml"

if (hasProperty('android')) {
    android {
        buildTypes {
            debug {
                testCoverageEnabled = true
                enableUnitTestCoverage = true
                enableAndroidTestCoverage true
            }
        }
    }
}

afterEvaluate {
    tasks.withType(Test).configureEach {
        jacoco.includeNoLocationClasses = true
        jacoco.excludes = ['jdk.internal.*']
    }

    tasks.register("testCoverage", JacocoReport) {
        dependsOn testTask

        reports {
            html.required.set(false)
            xml.required.set(true)
            xml.outputLocation.set(file(jacocoResults))
        }

        executionData.setFrom(fileTree(dir: buildDir, includes: [
                "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
                "jacoco/test.exec"
        ]))

        def excludeFilter = [
                '**/test/**',
                '**/androidTest/**',
                '**/R.class',
                '**/R2.class',
                '**/R$*.class',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*Test*.*'
        ]

        def sources = isCore ? sourceSets.main.java.srcDirs : android.sourceSets.main.java.srcDirs
        sourceDirectories.setFrom(files(sources))
        classDirectories.setFrom(files([
                fileTree(
                        dir: "${buildDir}/tmp/kotlin-classes/debug",
                        excludes: excludeFilter
                ),
                fileTree(
                        dir: "${buildDir}/classes/kotlin/main",
                        excludes: excludeFilter
                )
        ]))
    }
}

def ignoredModules = [
        'stream-chat-android-docs',
        'stream-chat-android-benchmark',
        'stream-chat-android-compose-sample',
        'stream-chat-android-e2e-test',
        'stream-chat-android-previewdata',
        'stream-chat-android-test',
        'stream-chat-android-ui-guides',
        'stream-chat-android-ui-components-sample',
        'stream-chat-android-pushprovider-firebase',
        'stream-chat-android-ai-assistant',
        'stream-chat-android-client-test',
        'stream-chat-android-ui-uitests'
]
if (!ignoredModules.contains(name)) {
    apply plugin: "org.sonarqube"

    sonarqube {
        properties {
            property "sonar.junit.reportPaths", "${buildDir}/test-results/${testTask}"
            property "sonar.coverage.jacoco.xmlReportPaths", jacocoResults
        }
    }
}

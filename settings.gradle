plugins {
	id("com.github.burrunan.s3-build-cache") version "1.2"
	id("com.gradle.enterprise") version "3.7"
}
include (
		':stream-chat-android-ui-utils',
		':stream-chat-android-ui-common',
		':stream-chat-android-ui-components',
		':stream-chat-android-ui-components-sample',
		':stream-chat-android-ui-guides',
		':stream-chat-android-state',
		':stream-chat-android-offline',
		':stream-chat-android-offline-realm',
		':stream-chat-android-client',
		':stream-chat-android-client-test',
		':stream-chat-android-core',
		':stream-chat-android-test',
		':stream-chat-android-docs',
		':stream-chat-android-compose',
		':stream-chat-android-compose-sample',
		':stream-chat-android-markdown-transformer',
		':stream-chat-android-pushprovider-firebase',
		':stream-chat-android-pushprovider-huawei',
		':stream-chat-android-pushprovider-xiaomi',
		':stream-chat-android-ui-uitests',
		':libraries:logging:stream-logger',
		':libraries:logging:stream-logger-file',
		':libraries:logging:stream-logger-android',
		':libraries:logging:stream-logger-android-init',
)

buildCache {
	local {
		enabled = !System.getenv().containsKey("CI")
		removeUnusedEntriesAfterDays = 7
	}
	Properties localProperties = new Properties()
	File file = new File("local.properties")
	if (file.exists()) {
		file.newDataInputStream().withCloseable { localProperties.load(it) }
	}
	String streamAWSRegion = localProperties.get("buildCache.AWSRegion") ?: System.getenv("BUILD_CACHE_AWS_REGION") ?: ""
	String streamAWSBucket = localProperties.get("buildCache.AWSBucket") ?: System.getenv("BUILD_CACHE_AWS_BUCKET") ?: ""
	String streamAWSAccessKeyId = localProperties.get("buildCache.AWSAccessKeyId") ?: System.getenv("BUILD_CACHE_AWS_ACCESS_KEY_ID") ?: ""
	String streamAWSSecretKey = localProperties.get("buildCache.AWSSecretKey") ?: System.getenv("BUILD_CACHE_AWS_SECRET_KEY") ?: ""
	Boolean streamBuildCacheDisabled = Boolean.parseBoolean(localProperties.get("buildCache.disabled"))
	if (!streamBuildCacheDisabled &&
			!streamAWSRegion.isBlank() &&
			!streamAWSBucket.isBlank() &&
			!streamAWSAccessKeyId.isBlank() &&
			!streamAWSSecretKey.isBlank()
	) {
		remote(com.github.burrunan.s3cache.AwsS3BuildCache) {
			region = streamAWSRegion
			bucket = streamAWSBucket
			prefix = 'cache/'
			awsAccessKeyId = streamAWSAccessKeyId
			awsSecretKey = streamAWSSecretKey
			push = System.getenv().containsKey("CI")

		}
	}
}

gradleEnterprise {
	buildScan {
		termsOfServiceUrl = "https://gradle.com/terms-of-service"
		termsOfServiceAgree = "yes"
	}
}

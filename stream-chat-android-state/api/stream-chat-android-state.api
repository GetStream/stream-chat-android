public abstract class io/getstream/chat/android/state/event/handler/chat/BaseChatEventHandler : io/getstream/chat/android/state/event/handler/chat/ChatEventHandler {
	public fun <init> ()V
	public fun handleChannelEvent (Lio/getstream/chat/android/client/events/HasChannel;Lio/getstream/chat/android/models/FilterObject;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
	public fun handleChatEvent (Lio/getstream/chat/android/client/events/ChatEvent;Lio/getstream/chat/android/models/FilterObject;Lio/getstream/chat/android/models/Channel;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
	public fun handleCidEvent (Lio/getstream/chat/android/client/events/CidEvent;Lio/getstream/chat/android/models/FilterObject;Lio/getstream/chat/android/models/Channel;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
}

public abstract interface class io/getstream/chat/android/state/event/handler/chat/ChatEventHandler {
	public abstract fun handleChatEvent (Lio/getstream/chat/android/client/events/ChatEvent;Lio/getstream/chat/android/models/FilterObject;Lio/getstream/chat/android/models/Channel;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
}

public class io/getstream/chat/android/state/event/handler/chat/DefaultChatEventHandler : io/getstream/chat/android/state/event/handler/chat/BaseChatEventHandler {
	public fun <init> (Lkotlinx/coroutines/flow/StateFlow;Lio/getstream/chat/android/client/setup/state/ClientState;)V
	protected final fun addIfChannelIsAbsent (Lio/getstream/chat/android/models/Channel;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
	protected final fun addIfCurrentUserJoinedChannel (Lio/getstream/chat/android/models/Channel;Lio/getstream/chat/android/models/Member;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
	protected final fun getChannels ()Lkotlinx/coroutines/flow/StateFlow;
	protected final fun getClientState ()Lio/getstream/chat/android/client/setup/state/ClientState;
	public fun handleChannelEvent (Lio/getstream/chat/android/client/events/HasChannel;Lio/getstream/chat/android/models/FilterObject;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
	public fun handleCidEvent (Lio/getstream/chat/android/client/events/CidEvent;Lio/getstream/chat/android/models/FilterObject;Lio/getstream/chat/android/models/Channel;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
	protected final fun removeIfChannelExists (Ljava/lang/String;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult;
}

public abstract class io/getstream/chat/android/state/event/handler/chat/EventHandlingResult {
}

public final class io/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Add : io/getstream/chat/android/state/event/handler/chat/EventHandlingResult {
	public fun <init> (Lio/getstream/chat/android/models/Channel;)V
	public final fun component1 ()Lio/getstream/chat/android/models/Channel;
	public final fun copy (Lio/getstream/chat/android/models/Channel;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Add;
	public static synthetic fun copy$default (Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Add;Lio/getstream/chat/android/models/Channel;ILjava/lang/Object;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Add;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Lio/getstream/chat/android/models/Channel;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Remove : io/getstream/chat/android/state/event/handler/chat/EventHandlingResult {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Remove;
	public static synthetic fun copy$default (Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Remove;Ljava/lang/String;ILjava/lang/Object;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Remove;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCid ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Skip : io/getstream/chat/android/state/event/handler/chat/EventHandlingResult {
	public static final field INSTANCE Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$Skip;
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/event/handler/chat/EventHandlingResult$WatchAndAdd : io/getstream/chat/android/state/event/handler/chat/EventHandlingResult {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$WatchAndAdd;
	public static synthetic fun copy$default (Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$WatchAndAdd;Ljava/lang/String;ILjava/lang/Object;)Lio/getstream/chat/android/state/event/handler/chat/EventHandlingResult$WatchAndAdd;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCid ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class io/getstream/chat/android/state/event/handler/chat/factory/ChatEventHandlerFactory {
	public fun <init> ()V
	public fun <init> (Lio/getstream/chat/android/client/setup/state/ClientState;)V
	public synthetic fun <init> (Lio/getstream/chat/android/client/setup/state/ClientState;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun chatEventHandler (Lkotlinx/coroutines/flow/StateFlow;)Lio/getstream/chat/android/state/event/handler/chat/ChatEventHandler;
}

public final class io/getstream/chat/android/state/extensions/ChatClientExtensions {
	public static final fun cancelEphemeralMessage (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/models/Message;)Lio/getstream/result/call/Call;
	public static final fun downloadAttachment (Lio/getstream/chat/android/client/ChatClient;Landroid/content/Context;Lio/getstream/chat/android/models/Attachment;)Lio/getstream/result/call/Call;
	public static final fun getGlobalState (Lio/getstream/chat/android/client/ChatClient;)Lio/getstream/chat/android/state/plugin/state/global/GlobalState;
	public static final fun getMessageUsingCache (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;)Lio/getstream/result/call/Call;
	public static final fun getRepliesAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getRepliesAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun getRepliesAsState$default (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun getState (Lio/getstream/chat/android/client/ChatClient;)Lio/getstream/chat/android/state/plugin/state/StateRegistry;
	public static final fun loadMessageById (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;Ljava/lang/String;)Lio/getstream/result/call/Call;
	public static final fun loadNewerMessages (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;Ljava/lang/String;I)Lio/getstream/result/call/Call;
	public static final fun loadNewestMessages (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;IZ)Lio/getstream/result/call/Call;
	public static synthetic fun loadNewestMessages$default (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;IZILjava/lang/Object;)Lio/getstream/result/call/Call;
	public static final fun loadOlderMessages (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;I)Lio/getstream/result/call/Call;
	public static final fun queryChannelsAsState (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun queryChannelsAsState (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;Lio/getstream/chat/android/state/event/handler/chat/factory/ChatEventHandlerFactory;)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun queryChannelsAsState (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;Lio/getstream/chat/android/state/event/handler/chat/factory/ChatEventHandlerFactory;Lkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun queryChannelsAsState$default (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;Lio/getstream/chat/android/state/event/handler/chat/factory/ChatEventHandlerFactory;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun setMessageForReply (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;Lio/getstream/chat/android/models/Message;)Lio/getstream/result/call/Call;
	public static final fun watchChannelAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;I)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun watchChannelAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun watchChannelAsState$default (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
}

public final class io/getstream/chat/android/state/plugin/config/StatePluginConfig {
	public fun <init> ()V
	public fun <init> (Z)V
	public fun <init> (ZZ)V
	public fun <init> (ZZLio/getstream/chat/android/models/TimeDuration;)V
	public synthetic fun <init> (ZZLio/getstream/chat/android/models/TimeDuration;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Lio/getstream/chat/android/models/TimeDuration;
	public final fun copy (ZZLio/getstream/chat/android/models/TimeDuration;)Lio/getstream/chat/android/state/plugin/config/StatePluginConfig;
	public static synthetic fun copy$default (Lio/getstream/chat/android/state/plugin/config/StatePluginConfig;ZZLio/getstream/chat/android/models/TimeDuration;ILjava/lang/Object;)Lio/getstream/chat/android/state/plugin/config/StatePluginConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackgroundSyncEnabled ()Z
	public final fun getSyncMaxThreshold ()Lio/getstream/chat/android/models/TimeDuration;
	public final fun getUserPresence ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/plugin/factory/StreamStatePluginFactory : io/getstream/chat/android/client/plugin/factory/PluginFactory {
	public fun <init> (Lio/getstream/chat/android/state/plugin/config/StatePluginConfig;Landroid/content/Context;)V
	public fun get (Lio/getstream/chat/android/models/User;)Lio/getstream/chat/android/client/plugin/Plugin;
}

public final class io/getstream/chat/android/state/plugin/state/StateRegistry {
	public fun <init> (Lkotlinx/coroutines/flow/StateFlow;Lkotlinx/coroutines/flow/StateFlow;Lkotlinx/coroutines/Job;Lkotlinx/coroutines/CoroutineScope;)V
	public final fun channel (Ljava/lang/String;Ljava/lang/String;)Lio/getstream/chat/android/client/channel/state/ChannelState;
	public final fun clear ()V
	public final fun queryChannels (Lio/getstream/chat/android/models/FilterObject;Lio/getstream/chat/android/models/querysort/QuerySorter;)Lio/getstream/chat/android/state/plugin/state/querychannels/QueryChannelsState;
	public final fun thread (Ljava/lang/String;)Lio/getstream/chat/android/state/plugin/state/channel/thread/ThreadState;
}

public abstract interface class io/getstream/chat/android/state/plugin/state/channel/thread/ThreadState {
	public abstract fun getEndOfOlderMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoading ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoadingOlderMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getOldestInThread ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getParentId ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/state/plugin/state/global/GlobalState {
	public abstract fun getBanned ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelMutes ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelUnreadCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMuted ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getTotalUnreadCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getTypingChannels ()Lkotlinx/coroutines/flow/StateFlow;
}

public abstract class io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData {
}

public final class io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$Loading : io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData {
	public static final field INSTANCE Lio/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$Loading;
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$NoQueryActive : io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData {
	public static final field INSTANCE Lio/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$NoQueryActive;
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$OfflineNoResults : io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData {
	public static final field INSTANCE Lio/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$OfflineNoResults;
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$Result : io/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$Result;
	public static synthetic fun copy$default (Lio/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$Result;Ljava/util/List;ILjava/lang/Object;)Lio/getstream/chat/android/state/plugin/state/querychannels/ChannelsStateData$Result;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannels ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/state/plugin/state/querychannels/QueryChannelsState {
	public abstract fun getChannels ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelsStateData ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChatEventHandlerFactory ()Lio/getstream/chat/android/state/event/handler/chat/factory/ChatEventHandlerFactory;
	public abstract fun getCurrentRequest ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getEndOfChannels ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getFilter ()Lio/getstream/chat/android/models/FilterObject;
	public abstract fun getLoading ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoadingMore ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getNextPageRequest ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getRecoveryNeeded ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getSort ()Lio/getstream/chat/android/models/querysort/QuerySorter;
	public abstract fun setChatEventHandlerFactory (Lio/getstream/chat/android/state/event/handler/chat/factory/ChatEventHandlerFactory;)V
}

public class io/getstream/chat/android/state/utils/Event {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getContentIfNotHandled ()Ljava/lang/Object;
	public final fun getHasBeenHandled ()Z
	public final fun peekContent ()Ljava/lang/Object;
}

public final class io/getstream/chat/android/state/utils/EventObserver : androidx/lifecycle/Observer {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun onChanged (Lio/getstream/chat/android/state/utils/Event;)V
	public synthetic fun onChanged (Ljava/lang/Object;)V
}


import com.getstream.sdk.chat.Dependencies
import com.getstream.sdk.chat.Configuration

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.hiya.jacoco-android'
apply plugin: 'kotlin-android'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'com.github.dcendents.android-maven'

group = Configuration.artifactGroup
version = Configuration.versionName

def DEFAULT_API_ENDPOINT = 'chat-us-east-1.stream-io-api.com'
def DEFAULT_API_KEEP_ALIVE_TIMEOUT = 1000 * 45
def DEFAULT_API_TIMEOUT = 1000 * 6
def DEFAULT_CDN_TIMEOUT = 1000 * 6

android {
    compileSdkVersion Configuration.compileSdkVersion

    defaultConfig {
        versionName Configuration.versionName

        buildConfigField "String", "DEFAULT_API_ENDPOINT", "\"$DEFAULT_API_ENDPOINT\""
        buildConfigField "int", "DEFAULT_API_TIMEOUT", "$DEFAULT_API_TIMEOUT"
        buildConfigField "int", "DEFAULT_CDN_TIMEOUT", "$DEFAULT_CDN_TIMEOUT"
        buildConfigField "int", "DEFAULT_API_KEEP_ALIVE_TIMEOUT", "$DEFAULT_API_KEEP_ALIVE_TIMEOUT"

        buildConfigField 'String', 'STREAM_CHAT_UI_VERSION', "\"$version\""

        minSdkVersion Configuration.minSdkVersion
        targetSdkVersion Configuration.targetSdkVersion
        vectorDrawables.useSupportLibrary = true
    }

    resourcePrefix 'stream_'

    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
            // Show the result of every unit test, even if it passes.
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }

    sourceSets {
        all {
            it.java.srcDir "src/$it.name/kotlin"
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
        noStdlib = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                '-progressive',
                '-Xexplicit-api=strict',
                '-Xopt-in=io.getstream.chat.android.core.internal.InternalStreamChatApi'
        ]
    }
}

dependencies {
    api project(":stream-chat-android-offline")

    implementation Dependencies.kotlinStdLib
    implementation Dependencies.androidxAppCompat
    implementation Dependencies.constraintLayout
    implementation Dependencies.androidLegacySupport
    api Dependencies.androidxRecyclerview
    implementation Dependencies.activityKtx
    implementation Dependencies.fragmentKtx
    implementation Dependencies.androidxLifecycleExtensions
    implementation Dependencies.androidxLifecycleViewModelKtx

    implementation Dependencies.roomRuntime

    implementation Dependencies.okhttp
    implementation Dependencies.okhttpLoggingInterceptor

    implementation Dependencies.retrofit
    implementation Dependencies.retrofitGsonConverter

    implementation Dependencies.gson

    implementation Dependencies.drawabletoolbox
    implementation Dependencies.markwonCore
    implementation Dependencies.markwonLinkify
    implementation Dependencies.markwonextStrikethrough
    implementation Dependencies.markwonImage

    implementation Dependencies.fresco
    implementation Dependencies.photodraweeview
    implementation Dependencies.keyboardVisibilityEvent
    implementation Dependencies.dexter

    implementation Dependencies.firebaseMessaging

    implementation Dependencies.androidxMedia
    implementation Dependencies.coil
    implementation Dependencies.coilGif
    implementation Dependencies.coilVideo

    // ExoPlayer
    api Dependencies.exoplayerCore
    api Dependencies.exoplayerDash
    api Dependencies.exoplayerHls
    api Dependencies.exoplayerSmoothstreaming

    // Tests
    testImplementation project(":stream-chat-android-test")

    testImplementation Dependencies.junitJupiterApi
    testImplementation Dependencies.junitJupiterParams
    testRuntimeOnly Dependencies.junitJupiterEngine

    testImplementation Dependencies.truth
    testImplementation Dependencies.mockito
    testImplementation Dependencies.mockitoKotlin
    testImplementation Dependencies.androidxArchCoreTest
    testImplementation Dependencies.kluent
    testImplementation Dependencies.coroutinesTest
}

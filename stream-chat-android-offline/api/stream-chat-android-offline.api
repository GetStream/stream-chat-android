public final class io/getstream/chat/android/livedata/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class io/getstream/chat/android/livedata/ChannelData {
	public fun <init> (Lio/getstream/chat/android/client/models/Channel;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()I
	public final fun component11 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lio/getstream/chat/android/client/models/User;
	public final fun component5 ()I
	public final fun component6 ()Z
	public final fun component7 ()Ljava/util/Date;
	public final fun component8 ()Ljava/util/Date;
	public final fun component9 ()Ljava/util/Date;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/util/Map;)Lio/getstream/chat/android/livedata/ChannelData;
	public static synthetic fun copy$default (Lio/getstream/chat/android/livedata/ChannelData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/util/Map;ILjava/lang/Object;)Lio/getstream/chat/android/livedata/ChannelData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ljava/lang/String;
	public final fun getCid ()Ljava/lang/String;
	public final fun getCooldown ()I
	public final fun getCreatedAt ()Ljava/util/Date;
	public final fun getCreatedBy ()Lio/getstream/chat/android/client/models/User;
	public final fun getDeletedAt ()Ljava/util/Date;
	public final fun getExtraData ()Ljava/util/Map;
	public final fun getFrozen ()Z
	public final fun getMemberCount ()I
	public final fun getType ()Ljava/lang/String;
	public final fun getUpdatedAt ()Ljava/util/Date;
	public fun hashCode ()I
	public final fun setChannelId (Ljava/lang/String;)V
	public final fun setCid (Ljava/lang/String;)V
	public final fun setCooldown (I)V
	public final fun setCreatedAt (Ljava/util/Date;)V
	public final fun setCreatedBy (Lio/getstream/chat/android/client/models/User;)V
	public final fun setDeletedAt (Ljava/util/Date;)V
	public final fun setExtraData (Ljava/util/Map;)V
	public final fun setFrozen (Z)V
	public final fun setMemberCount (I)V
	public final fun setType (Ljava/lang/String;)V
	public final fun setUpdatedAt (Ljava/util/Date;)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/livedata/ChatDomain {
	public static final field Companion Lio/getstream/chat/android/livedata/ChatDomain$Companion;
	public abstract fun clean ()V
	public abstract fun disconnect (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getActiveQueries ()Ljava/util/List;
	public abstract fun getBanned ()Landroidx/lifecycle/LiveData;
	public abstract fun getChannelConfig (Ljava/lang/String;)Lio/getstream/chat/android/client/models/Config;
	public abstract fun getChannelUnreadCount ()Landroidx/lifecycle/LiveData;
	public abstract fun getCurrentUser ()Lio/getstream/chat/android/client/models/User;
	public abstract fun getErrorEvents ()Landroidx/lifecycle/LiveData;
	public abstract fun getInitialized ()Landroidx/lifecycle/LiveData;
	public abstract fun getMuted ()Landroidx/lifecycle/LiveData;
	public abstract fun getOfflineEnabled ()Z
	public abstract fun getOnline ()Landroidx/lifecycle/LiveData;
	public abstract fun getRetryPolicy ()Lio/getstream/chat/android/livedata/utils/RetryPolicy;
	public abstract fun getTotalUnreadCount ()Landroidx/lifecycle/LiveData;
	public abstract fun getTypingUpdates ()Landroidx/lifecycle/LiveData;
	public abstract fun getUseCases ()Lio/getstream/chat/android/livedata/usecase/UseCaseHelper;
	public abstract fun getUserPresence ()Z
	public abstract fun getVersion ()Ljava/lang/String;
	public static fun instance ()Lio/getstream/chat/android/livedata/ChatDomain;
	public abstract fun isInitialized ()Z
	public abstract fun isOffline ()Z
	public abstract fun isOnline ()Z
	public abstract fun setCurrentUser (Lio/getstream/chat/android/client/models/User;)V
	public abstract fun setOfflineEnabled (Z)V
	public abstract fun setRetryPolicy (Lio/getstream/chat/android/livedata/utils/RetryPolicy;)V
	public abstract fun setUserPresence (Z)V
}

public final class io/getstream/chat/android/livedata/ChatDomain$Builder {
	public fun <init> (Landroid/content/Context;Lio/getstream/chat/android/client/ChatClient;)V
	public fun <init> (Landroid/content/Context;Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/models/User;)V
	public fun <init> (Lio/getstream/chat/android/client/ChatClient;Landroid/content/Context;)V
	public fun <init> (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/models/User;Landroid/content/Context;)V
	public final fun build ()Lio/getstream/chat/android/livedata/ChatDomain;
	public final fun copy (Landroid/content/Context;Lio/getstream/chat/android/client/ChatClient;)Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public static synthetic fun copy$default (Lio/getstream/chat/android/livedata/ChatDomain$Builder;Landroid/content/Context;Lio/getstream/chat/android/client/ChatClient;ILjava/lang/Object;)Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun disableBackgroundSync ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun enableBackgroundSync ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun notificationConfig (Lio/getstream/chat/android/client/notifications/handler/NotificationConfig;)Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun offlineDisabled ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun offlineEnabled ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun recoveryDisabled ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun recoveryEnabled ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public fun toString ()Ljava/lang/String;
	public final fun userPresenceDisabled ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
	public final fun userPresenceEnabled ()Lio/getstream/chat/android/livedata/ChatDomain$Builder;
}

public final class io/getstream/chat/android/livedata/ChatDomain$Companion {
	public final fun instance ()Lio/getstream/chat/android/livedata/ChatDomain;
	public final fun isInitialized ()Z
}

public abstract interface class io/getstream/chat/android/livedata/controller/ChannelController {
	public abstract fun clean ()V
	public abstract fun getChannelData ()Landroidx/lifecycle/LiveData;
	public abstract fun getChannelId ()Ljava/lang/String;
	public abstract fun getChannelType ()Ljava/lang/String;
	public abstract fun getCid ()Ljava/lang/String;
	public abstract fun getEndOfNewerMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getEndOfOlderMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getHidden ()Landroidx/lifecycle/LiveData;
	public abstract fun getLoading ()Landroidx/lifecycle/LiveData;
	public abstract fun getLoadingNewerMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getLoadingOlderMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getMembers ()Landroidx/lifecycle/LiveData;
	public abstract fun getMessage (Ljava/lang/String;)Lio/getstream/chat/android/client/models/Message;
	public abstract fun getMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getMessagesState ()Landroidx/lifecycle/LiveData;
	public abstract fun getMuted ()Landroidx/lifecycle/LiveData;
	public abstract fun getOldMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getRead ()Landroidx/lifecycle/LiveData;
	public abstract fun getReads ()Landroidx/lifecycle/LiveData;
	public abstract fun getRecoveryNeeded ()Z
	public abstract fun getRepliedMessage ()Landroidx/lifecycle/LiveData;
	public abstract fun getTyping ()Landroidx/lifecycle/LiveData;
	public abstract fun getUnreadCount ()Landroidx/lifecycle/LiveData;
	public abstract fun getWatcherCount ()Landroidx/lifecycle/LiveData;
	public abstract fun getWatchers ()Landroidx/lifecycle/LiveData;
	public abstract fun toChannel ()Lio/getstream/chat/android/client/models/Channel;
}

public abstract class io/getstream/chat/android/livedata/controller/ChannelController$MessagesState {
}

public final class io/getstream/chat/android/livedata/controller/ChannelController$MessagesState$Loading : io/getstream/chat/android/livedata/controller/ChannelController$MessagesState {
	public static final field INSTANCE Lio/getstream/chat/android/livedata/controller/ChannelController$MessagesState$Loading;
}

public final class io/getstream/chat/android/livedata/controller/ChannelController$MessagesState$NoQueryActive : io/getstream/chat/android/livedata/controller/ChannelController$MessagesState {
	public static final field INSTANCE Lio/getstream/chat/android/livedata/controller/ChannelController$MessagesState$NoQueryActive;
}

public final class io/getstream/chat/android/livedata/controller/ChannelController$MessagesState$OfflineNoResults : io/getstream/chat/android/livedata/controller/ChannelController$MessagesState {
	public static final field INSTANCE Lio/getstream/chat/android/livedata/controller/ChannelController$MessagesState$OfflineNoResults;
}

public final class io/getstream/chat/android/livedata/controller/ChannelController$MessagesState$Result : io/getstream/chat/android/livedata/controller/ChannelController$MessagesState {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/getstream/chat/android/livedata/controller/ChannelController$MessagesState$Result;
	public static synthetic fun copy$default (Lio/getstream/chat/android/livedata/controller/ChannelController$MessagesState$Result;Ljava/util/List;ILjava/lang/Object;)Lio/getstream/chat/android/livedata/controller/ChannelController$MessagesState$Result;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessages ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/livedata/controller/QueryChannelsController {
	public abstract fun getChannels ()Landroidx/lifecycle/LiveData;
	public abstract fun getChannelsState ()Landroidx/lifecycle/LiveData;
	public abstract fun getEndOfChannels ()Landroidx/lifecycle/LiveData;
	public abstract fun getFilter ()Lio/getstream/chat/android/client/api/models/FilterObject;
	public abstract fun getLoading ()Landroidx/lifecycle/LiveData;
	public abstract fun getLoadingMore ()Landroidx/lifecycle/LiveData;
	public abstract fun getNewChannelEventFilter ()Lkotlin/jvm/functions/Function2;
	public abstract fun getRecoveryNeeded ()Z
	public abstract fun getSort ()Lio/getstream/chat/android/client/api/models/QuerySort;
	public abstract fun setNewChannelEventFilter (Lkotlin/jvm/functions/Function2;)V
}

public abstract class io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState {
}

public final class io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$Loading : io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState {
	public static final field INSTANCE Lio/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$Loading;
}

public final class io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$NoQueryActive : io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState {
	public static final field INSTANCE Lio/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$NoQueryActive;
}

public final class io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$OfflineNoResults : io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState {
	public static final field INSTANCE Lio/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$OfflineNoResults;
}

public final class io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$Result : io/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$Result;
	public static synthetic fun copy$default (Lio/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$Result;Ljava/util/List;ILjava/lang/Object;)Lio/getstream/chat/android/livedata/controller/QueryChannelsController$ChannelsState$Result;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannels ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/livedata/controller/ThreadController {
	public abstract fun getEndOfOlderMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getLoadingOlderMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getMessages ()Landroidx/lifecycle/LiveData;
	public abstract fun getMessagesSorted ()Ljava/util/List;
	public abstract fun getThreadId ()Ljava/lang/String;
}

public final class io/getstream/chat/android/livedata/extensions/ChatErrorKt {
	public static final fun isPermanent (Lio/getstream/chat/android/client/errors/ChatError;)Z
}

public final class io/getstream/chat/android/livedata/repository/database/ChatDatabase_Impl {
	public static final field Companion Lio/getstream/chat/android/livedata/repository/database/ChatDatabase$Companion;
	public fun <init> ()V
	public fun channelConfigDao ()Lio/getstream/chat/android/livedata/repository/domain/channelconfig/ChannelConfigDao;
	public fun channelStateDao ()Lio/getstream/chat/android/livedata/repository/domain/channel/ChannelDao;
	public fun clearAllTables ()V
	public fun messageDao ()Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;
	public fun queryChannelsDao ()Lio/getstream/chat/android/livedata/repository/domain/queryChannels/QueryChannelsDao;
	public fun reactionDao ()Lio/getstream/chat/android/livedata/repository/domain/reaction/ReactionDao;
	public fun syncStateDao ()Lio/getstream/chat/android/livedata/repository/domain/syncState/SyncStateDao;
	public fun userDao ()Lio/getstream/chat/android/livedata/repository/domain/user/UserDao;
}

public final class io/getstream/chat/android/livedata/repository/domain/channel/ChannelDao_Impl : io/getstream/chat/android/livedata/repository/domain/channel/ChannelDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/channel/ChannelEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertMany (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectSyncNeeded (Lio/getstream/chat/android/client/utils/SyncStatus;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setDeletedAt (Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setHidden (Ljava/lang/String;ZLjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setHidden (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/repository/domain/channelconfig/ChannelConfigDao_Impl {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/channelconfig/ChannelConfigEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/repository/domain/message/MessageDao_Impl {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun deleteChannelMessagesBefore (Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/message/MessageEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun messagesForChannel (Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannel$default (Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;Ljava/lang/String;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelEqualOrNewerThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelEqualOrNewerThan$default (Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelEqualOrOlderThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelEqualOrOlderThan$default (Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelNewerThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelNewerThan$default (Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelOlderThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelOlderThan$default (Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectSyncNeeded (Lio/getstream/chat/android/client/utils/SyncStatus;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun selectSyncNeeded$default (Lio/getstream/chat/android/livedata/repository/domain/message/MessageDao;Lio/getstream/chat/android/client/utils/SyncStatus;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/repository/domain/queryChannels/QueryChannelsDao_Impl : io/getstream/chat/android/livedata/repository/domain/queryChannels/QueryChannelsDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun deleteSortEntitiesFor (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/queryChannels/QueryChannelsEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/queryChannels/QueryChannelsWithSorts;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/repository/domain/reaction/ReactionDao_Impl : io/getstream/chat/android/livedata/repository/domain/reaction/ReactionDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/reaction/ReactionEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectSyncNeeded (Lio/getstream/chat/android/client/utils/SyncStatus;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectUserReactionsToMessage (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setDeleteAt (Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/repository/domain/syncState/SyncStateDao_Impl : io/getstream/chat/android/livedata/repository/domain/syncState/SyncStateDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/syncState/SyncStateEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/repository/domain/user/UserDao_Impl : io/getstream/chat/android/livedata/repository/domain/user/UserDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun insert (Lio/getstream/chat/android/livedata/repository/domain/user/UserEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertMany (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectAllUser (II)Ljava/util/List;
	public fun selectUsersLikeName (Ljava/lang/String;II)Ljava/util/List;
}

public final class io/getstream/chat/android/livedata/service/sync/PushMessageSyncHandler {
	public fun <init> (Landroid/app/Service;)V
	public final fun isStreamMessage (Lcom/google/firebase/messaging/RemoteMessage;)Z
	public final fun onMessageReceived (Lcom/google/firebase/messaging/RemoteMessage;)V
	public final fun onNewToken (Ljava/lang/String;)V
}

public abstract interface class io/getstream/chat/android/livedata/usecase/CancelMessage {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/CreateChannel {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/DeleteChannel {
	public abstract fun invoke (Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/DeleteMessage {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/DeleteReaction {
	public abstract fun invoke (Ljava/lang/String;Lio/getstream/chat/android/client/models/Reaction;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/EditMessage {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/GetChannelController {
	public abstract fun invoke (Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/GetThread {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/GetTotalUnreadCount {
	public abstract fun invoke ()Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/GetUnreadChannelCount {
	public abstract fun invoke ()Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/HideChannel {
	public abstract fun invoke (Ljava/lang/String;Z)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/Keystroke {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/Keystroke$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/Keystroke;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/LeaveChannel {
	public abstract fun invoke (Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/LoadMessageById {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;II)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/LoadMessageById$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/LoadMessageById;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/LoadNewerMessages {
	public abstract fun invoke (Ljava/lang/String;I)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/LoadOlderMessages {
	public abstract fun invoke (Ljava/lang/String;I)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/MarkAllRead {
	public abstract fun invoke ()Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/MarkRead {
	public abstract fun invoke (Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/QueryChannels {
	public abstract fun invoke (Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;II)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/QueryChannels$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/QueryChannels;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;IIILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/QueryChannelsLoadMore {
	public abstract fun invoke (Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;II)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/QueryChannelsLoadMore$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/QueryChannelsLoadMore;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;IIILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/QueryMembers {
	public final fun invoke (Ljava/lang/String;IILio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;Ljava/util/List;)Lio/getstream/chat/android/client/call/Call;
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/QueryMembers;Ljava/lang/String;IILio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;Ljava/util/List;ILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/ReplayEventsForActiveChannels {
	public abstract fun invoke (Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/SearchUsersByName {
	public static final field Companion Lio/getstream/chat/android/livedata/usecase/SearchUsersByName$Companion;
	public final fun invoke (Ljava/lang/String;IIZ)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/SendGiphy {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/SendMessage {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;Lkotlin/jvm/functions/Function2;)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/SendMessage$DefaultImpls {
	public static fun invoke (Lio/getstream/chat/android/livedata/usecase/SendMessage;Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/SendMessageWithAttachments {
	public abstract fun invoke (Ljava/lang/String;Lio/getstream/chat/android/client/models/Message;Ljava/util/List;Lkotlin/jvm/functions/Function2;)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/SendMessageWithAttachments$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/SendMessageWithAttachments;Ljava/lang/String;Lio/getstream/chat/android/client/models/Message;Ljava/util/List;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/SendReaction {
	public abstract fun invoke (Ljava/lang/String;Lio/getstream/chat/android/client/models/Reaction;Z)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/SendReaction$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/SendReaction;Ljava/lang/String;Lio/getstream/chat/android/client/models/Reaction;ZILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/SetMessageForReply {
	public abstract fun invoke (Ljava/lang/String;Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/ShowChannel {
	public abstract fun invoke (Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/ShuffleGiphy {
	public abstract fun invoke (Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/StopTyping {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/StopTyping$DefaultImpls {
	public static synthetic fun invoke$default (Lio/getstream/chat/android/livedata/usecase/StopTyping;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/getstream/chat/android/client/call/Call;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/ThreadLoadMore {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;I)Lio/getstream/chat/android/client/call/Call;
}

public final class io/getstream/chat/android/livedata/usecase/UseCaseHelper {
	public final fun getCancelMessage ()Lio/getstream/chat/android/livedata/usecase/CancelMessage;
	public final fun getCreateChannel ()Lio/getstream/chat/android/livedata/usecase/CreateChannel;
	public final fun getDeleteChannel ()Lio/getstream/chat/android/livedata/usecase/DeleteChannel;
	public final fun getDeleteMessage ()Lio/getstream/chat/android/livedata/usecase/DeleteMessage;
	public final fun getDeleteReaction ()Lio/getstream/chat/android/livedata/usecase/DeleteReaction;
	public final fun getDownloadAttachment ()Lio/getstream/chat/android/livedata/usecase/DownloadAttachment;
	public final fun getEditMessage ()Lio/getstream/chat/android/livedata/usecase/EditMessage;
	public final fun getGetChannelController ()Lio/getstream/chat/android/livedata/usecase/GetChannelController;
	public final fun getGetThread ()Lio/getstream/chat/android/livedata/usecase/GetThread;
	public final fun getGetTotalUnreadCount ()Lio/getstream/chat/android/livedata/usecase/GetTotalUnreadCount;
	public final fun getGetUnreadChannelCount ()Lio/getstream/chat/android/livedata/usecase/GetUnreadChannelCount;
	public final fun getHideChannel ()Lio/getstream/chat/android/livedata/usecase/HideChannel;
	public final fun getKeystroke ()Lio/getstream/chat/android/livedata/usecase/Keystroke;
	public final fun getLeaveChannel ()Lio/getstream/chat/android/livedata/usecase/LeaveChannel;
	public final fun getLoadMessageById ()Lio/getstream/chat/android/livedata/usecase/LoadMessageById;
	public final fun getLoadNewerMessages ()Lio/getstream/chat/android/livedata/usecase/LoadNewerMessages;
	public final fun getLoadOlderMessages ()Lio/getstream/chat/android/livedata/usecase/LoadOlderMessages;
	public final fun getMarkAllRead ()Lio/getstream/chat/android/livedata/usecase/MarkAllRead;
	public final fun getMarkRead ()Lio/getstream/chat/android/livedata/usecase/MarkRead;
	public final fun getQueryChannels ()Lio/getstream/chat/android/livedata/usecase/QueryChannels;
	public final fun getQueryChannelsLoadMore ()Lio/getstream/chat/android/livedata/usecase/QueryChannelsLoadMore;
	public final fun getQueryMembers ()Lio/getstream/chat/android/livedata/usecase/QueryMembers;
	public final fun getReplayEventsForActiveChannels ()Lio/getstream/chat/android/livedata/usecase/ReplayEventsForActiveChannels;
	public final fun getSearchUsersByName ()Lio/getstream/chat/android/livedata/usecase/SearchUsersByName;
	public final fun getSendGiphy ()Lio/getstream/chat/android/livedata/usecase/SendGiphy;
	public final fun getSendMessage ()Lio/getstream/chat/android/livedata/usecase/SendMessage;
	public final fun getSendMessageWithAttachments ()Lio/getstream/chat/android/livedata/usecase/SendMessageWithAttachments;
	public final fun getSendReaction ()Lio/getstream/chat/android/livedata/usecase/SendReaction;
	public final fun getSetMessageForReply ()Lio/getstream/chat/android/livedata/usecase/SetMessageForReply;
	public final fun getShowChannel ()Lio/getstream/chat/android/livedata/usecase/ShowChannel;
	public final fun getShuffleGiphy ()Lio/getstream/chat/android/livedata/usecase/ShuffleGiphy;
	public final fun getStopTyping ()Lio/getstream/chat/android/livedata/usecase/StopTyping;
	public final fun getThreadLoadMore ()Lio/getstream/chat/android/livedata/usecase/ThreadLoadMore;
	public final fun getWatchChannel ()Lio/getstream/chat/android/livedata/usecase/WatchChannel;
}

public abstract interface class io/getstream/chat/android/livedata/usecase/WatchChannel {
	public abstract fun invoke (Ljava/lang/String;I)Lio/getstream/chat/android/client/call/Call;
}

public class io/getstream/chat/android/livedata/utils/Event {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getContentIfNotHandled ()Ljava/lang/Object;
	public final fun getHasBeenHandled ()Z
	public final fun peekContent ()Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/utils/EventObserver : androidx/lifecycle/Observer {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun onChanged (Lio/getstream/chat/android/livedata/utils/Event;)V
	public synthetic fun onChanged (Ljava/lang/Object;)V
}

public abstract interface class io/getstream/chat/android/livedata/utils/RetryPolicy {
	public abstract fun retryTimeout (Lio/getstream/chat/android/client/ChatClient;ILio/getstream/chat/android/client/errors/ChatError;)I
	public abstract fun shouldRetry (Lio/getstream/chat/android/client/ChatClient;ILio/getstream/chat/android/client/errors/ChatError;)Z
}


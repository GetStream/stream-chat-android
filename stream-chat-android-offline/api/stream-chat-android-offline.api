public final class io/getstream/chat/android/livedata/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

public class io/getstream/chat/android/livedata/utils/Event {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getContentIfNotHandled ()Ljava/lang/Object;
	public final fun getHasBeenHandled ()Z
	public final fun peekContent ()Ljava/lang/Object;
}

public final class io/getstream/chat/android/livedata/utils/EventObserver : androidx/lifecycle/Observer {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun onChanged (Lio/getstream/chat/android/livedata/utils/Event;)V
	public synthetic fun onChanged (Ljava/lang/Object;)V
}

public abstract class io/getstream/chat/android/offline/event/handler/chat/BaseChatEventHandler : io/getstream/chat/android/offline/event/handler/chat/ChatEventHandler {
	public fun <init> ()V
	public fun handleChannelEvent (Lio/getstream/chat/android/client/events/HasChannel;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public abstract fun handleChannelUpdatedByUserEvent (Lio/getstream/chat/android/client/events/ChannelUpdatedByUserEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public abstract fun handleChannelUpdatedEvent (Lio/getstream/chat/android/client/events/ChannelUpdatedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleChatEvent (Lio/getstream/chat/android/client/events/ChatEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleCidEvent (Lio/getstream/chat/android/client/events/CidEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleMemberAddedEvent (Lio/getstream/chat/android/client/events/MemberAddedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleMemberRemovedEvent (Lio/getstream/chat/android/client/events/MemberRemovedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public abstract fun handleNotificationAddedToChannelEvent (Lio/getstream/chat/android/client/events/NotificationAddedToChannelEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationMessageNewEvent (Lio/getstream/chat/android/client/events/NotificationMessageNewEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationRemovedFromChannelEvent (Lio/getstream/chat/android/client/events/NotificationRemovedFromChannelEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
}

public abstract interface class io/getstream/chat/android/offline/event/handler/chat/ChatEventHandler {
	public abstract fun handleChatEvent (Lio/getstream/chat/android/client/events/ChatEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
}

public final class io/getstream/chat/android/offline/event/handler/chat/DefaultChatEventHandler : io/getstream/chat/android/offline/event/handler/chat/BaseChatEventHandler {
	public fun <init> (Lkotlinx/coroutines/flow/StateFlow;)V
	public fun handleChannelUpdatedByUserEvent (Lio/getstream/chat/android/client/events/ChannelUpdatedByUserEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleChannelUpdatedEvent (Lio/getstream/chat/android/client/events/ChannelUpdatedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleMemberAddedEvent (Lio/getstream/chat/android/client/events/MemberAddedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleMemberRemovedEvent (Lio/getstream/chat/android/client/events/MemberRemovedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationAddedToChannelEvent (Lio/getstream/chat/android/client/events/NotificationAddedToChannelEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationMessageNewEvent (Lio/getstream/chat/android/client/events/NotificationMessageNewEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationRemovedFromChannelEvent (Lio/getstream/chat/android/client/events/NotificationRemovedFromChannelEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
}

public abstract class io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult {
}

public final class io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Add : io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult {
	public fun <init> (Lio/getstream/chat/android/client/models/Channel;)V
	public final fun component1 ()Lio/getstream/chat/android/client/models/Channel;
	public final fun copy (Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Add;
	public static synthetic fun copy$default (Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Add;Lio/getstream/chat/android/client/models/Channel;ILjava/lang/Object;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Add;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannel ()Lio/getstream/chat/android/client/models/Channel;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Remove : io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Remove;
	public static synthetic fun copy$default (Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Remove;Ljava/lang/String;ILjava/lang/Object;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Remove;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCid ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Skip : io/getstream/chat/android/offline/event/handler/chat/EventHandlingResult {
	public static final field INSTANCE Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult$Skip;
}

public final class io/getstream/chat/android/offline/event/handler/chat/NonMemberChatEventHandler : io/getstream/chat/android/offline/event/handler/chat/BaseChatEventHandler {
	public fun <init> (Lkotlinx/coroutines/flow/StateFlow;)V
	public fun handleChannelUpdatedByUserEvent (Lio/getstream/chat/android/client/events/ChannelUpdatedByUserEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleChannelUpdatedEvent (Lio/getstream/chat/android/client/events/ChannelUpdatedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleMemberAddedEvent (Lio/getstream/chat/android/client/events/MemberAddedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleMemberRemovedEvent (Lio/getstream/chat/android/client/events/MemberRemovedEvent;Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/models/Channel;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationAddedToChannelEvent (Lio/getstream/chat/android/client/events/NotificationAddedToChannelEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationMessageNewEvent (Lio/getstream/chat/android/client/events/NotificationMessageNewEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
	public fun handleNotificationRemovedFromChannelEvent (Lio/getstream/chat/android/client/events/NotificationRemovedFromChannelEvent;Lio/getstream/chat/android/client/api/models/FilterObject;)Lio/getstream/chat/android/offline/event/handler/chat/EventHandlingResult;
}

public class io/getstream/chat/android/offline/event/handler/chat/factory/ChatEventHandlerFactory {
	public fun <init> ()V
	public fun chatEventHandler (Lkotlinx/coroutines/flow/StateFlow;)Lio/getstream/chat/android/offline/event/handler/chat/ChatEventHandler;
}

public final class io/getstream/chat/android/offline/extensions/ChatClientExtensions {
	public static final fun cancelEphemeralMessage (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
	public static final fun downloadAttachment (Lio/getstream/chat/android/client/ChatClient;Landroid/content/Context;Lio/getstream/chat/android/client/models/Attachment;)Lio/getstream/chat/android/client/call/Call;
	public static final fun getGlobalState (Lio/getstream/chat/android/client/ChatClient;)Lio/getstream/chat/android/offline/plugin/state/global/GlobalState;
	public static final fun getRepliesAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;I)Lio/getstream/chat/android/offline/plugin/state/channel/thread/ThreadState;
	public static final fun getRepliesAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;)Lio/getstream/chat/android/offline/plugin/state/channel/thread/ThreadState;
	public static synthetic fun getRepliesAsState$default (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lio/getstream/chat/android/offline/plugin/state/channel/thread/ThreadState;
	public static final fun getState (Lio/getstream/chat/android/client/ChatClient;)Lio/getstream/chat/android/offline/plugin/state/StateRegistry;
	public static final fun loadMessageById (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;Ljava/lang/String;II)Lio/getstream/chat/android/client/call/Call;
	public static final fun loadOlderMessages (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;I)Lio/getstream/chat/android/client/call/Call;
	public static final fun queryChannelsAsState (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun queryChannelsAsState (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;Lkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun queryChannelsAsState$default (Lio/getstream/chat/android/client/ChatClient;Lio/getstream/chat/android/client/api/models/QueryChannelsRequest;Lkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun setMessageForReply (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;Lio/getstream/chat/android/client/models/Message;)Lio/getstream/chat/android/client/call/Call;
	public static final fun watchChannelAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;I)Lkotlinx/coroutines/flow/StateFlow;
	public static final fun watchChannelAsState (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/flow/StateFlow;
	public static synthetic fun watchChannelAsState$default (Lio/getstream/chat/android/client/ChatClient;Ljava/lang/String;ILkotlinx/coroutines/CoroutineScope;ILjava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;
}

public final class io/getstream/chat/android/offline/extensions/internal/PairKt {
}

public final class io/getstream/chat/android/offline/model/channel/ChannelData {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/lang/String;Ljava/util/Map;Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/lang/String;Ljava/util/Map;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ljava/util/Date;
	public final fun component11 ()Ljava/util/Date;
	public final fun component12 ()I
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()Ljava/util/Map;
	public final fun component15 ()Ljava/util/Set;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Lio/getstream/chat/android/client/models/User;
	public final fun component7 ()I
	public final fun component8 ()Z
	public final fun component9 ()Ljava/util/Date;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/lang/String;Ljava/util/Map;Ljava/util/Set;)Lio/getstream/chat/android/offline/model/channel/ChannelData;
	public static synthetic fun copy$default (Lio/getstream/chat/android/offline/model/channel/ChannelData;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/getstream/chat/android/client/models/User;IZLjava/util/Date;Ljava/util/Date;Ljava/util/Date;ILjava/lang/String;Ljava/util/Map;Ljava/util/Set;ILjava/lang/Object;)Lio/getstream/chat/android/offline/model/channel/ChannelData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannelId ()Ljava/lang/String;
	public final fun getCid ()Ljava/lang/String;
	public final fun getCooldown ()I
	public final fun getCreatedAt ()Ljava/util/Date;
	public final fun getCreatedBy ()Lio/getstream/chat/android/client/models/User;
	public final fun getDeletedAt ()Ljava/util/Date;
	public final fun getExtraData ()Ljava/util/Map;
	public final fun getFrozen ()Z
	public final fun getImage ()Ljava/lang/String;
	public final fun getMemberCount ()I
	public final fun getName ()Ljava/lang/String;
	public final fun getOwnCapabilities ()Ljava/util/Set;
	public final fun getTeam ()Ljava/lang/String;
	public final fun getType ()Ljava/lang/String;
	public final fun getUpdatedAt ()Ljava/util/Date;
	public fun hashCode ()I
	public final fun isUserAbleTo (Ljava/lang/String;)Z
	public final fun setChannelId (Ljava/lang/String;)V
	public final fun setCid (Ljava/lang/String;)V
	public final fun setCooldown (I)V
	public final fun setCreatedAt (Ljava/util/Date;)V
	public final fun setCreatedBy (Lio/getstream/chat/android/client/models/User;)V
	public final fun setDeletedAt (Ljava/util/Date;)V
	public final fun setExtraData (Ljava/util/Map;)V
	public final fun setFrozen (Z)V
	public final fun setImage (Ljava/lang/String;)V
	public final fun setMemberCount (I)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setOwnCapabilities (Ljava/util/Set;)V
	public final fun setTeam (Ljava/lang/String;)V
	public final fun setType (Ljava/lang/String;)V
	public final fun setUpdatedAt (Ljava/util/Date;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/offline/model/connection/ConnectionState : java/lang/Enum {
	public static final field CONNECTED Lio/getstream/chat/android/offline/model/connection/ConnectionState;
	public static final field CONNECTING Lio/getstream/chat/android/offline/model/connection/ConnectionState;
	public static final field OFFLINE Lio/getstream/chat/android/offline/model/connection/ConnectionState;
	public static fun valueOf (Ljava/lang/String;)Lio/getstream/chat/android/offline/model/connection/ConnectionState;
	public static fun values ()[Lio/getstream/chat/android/offline/model/connection/ConnectionState;
}

public final class io/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType : java/lang/Enum {
	public static final field CONNECTED Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public static final field METERED Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public static final field NOT_ROAMING Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public static final field UNMETERED Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public static fun valueOf (Ljava/lang/String;)Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public static fun values ()[Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
}

public final class io/getstream/chat/android/offline/plugin/configuration/Config {
	public fun <init> ()V
	public fun <init> (ZZZLio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;)V
	public synthetic fun <init> (ZZZLio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public final fun copy (ZZZLio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;)Lio/getstream/chat/android/offline/plugin/configuration/Config;
	public static synthetic fun copy$default (Lio/getstream/chat/android/offline/plugin/configuration/Config;ZZZLio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;ILjava/lang/Object;)Lio/getstream/chat/android/offline/plugin/configuration/Config;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackgroundSyncEnabled ()Z
	public final fun getPersistenceEnabled ()Z
	public final fun getUploadAttachmentsNetworkType ()Lio/getstream/chat/android/offline/model/message/attachments/UploadAttachmentsNetworkType;
	public final fun getUserPresence ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/getstream/chat/android/offline/plugin/factory/StreamOfflinePluginFactory : io/getstream/chat/android/client/experimental/plugin/factory/PluginFactory {
	public fun <init> (Lio/getstream/chat/android/offline/plugin/configuration/Config;Landroid/content/Context;)V
	public fun get (Lio/getstream/chat/android/client/models/User;)Lio/getstream/chat/android/client/experimental/plugin/Plugin;
	public final fun setRepositoryFactory (Lio/getstream/chat/android/client/persistance/repository/factory/RepositoryFactory;)V
}

public final class io/getstream/chat/android/offline/plugin/state/StateRegistry {
	public synthetic fun <init> (Lkotlinx/coroutines/flow/StateFlow;Lio/getstream/chat/android/client/persistance/repository/MessageRepository;Lkotlinx/coroutines/flow/StateFlow;Lkotlinx/coroutines/Job;Lkotlinx/coroutines/CoroutineScope;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun channel (Ljava/lang/String;Ljava/lang/String;)Lio/getstream/chat/android/offline/plugin/state/channel/ChannelState;
	public final fun clear ()V
	public final fun getScope ()Lkotlinx/coroutines/CoroutineScope;
	public final fun queryChannels (Lio/getstream/chat/android/client/api/models/FilterObject;Lio/getstream/chat/android/client/api/models/QuerySort;)Lio/getstream/chat/android/offline/plugin/state/querychannels/QueryChannelsState;
	public final fun thread (Ljava/lang/String;)Lio/getstream/chat/android/offline/plugin/state/channel/thread/ThreadState;
}

public abstract interface class io/getstream/chat/android/offline/plugin/state/channel/ChannelState {
	public abstract fun getChannelConfig ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelData ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelId ()Ljava/lang/String;
	public abstract fun getChannelType ()Ljava/lang/String;
	public abstract fun getCid ()Ljava/lang/String;
	public abstract fun getEndOfNewerMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getEndOfOlderMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getHidden ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoading ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoadingNewerMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoadingOlderMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMembers ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMembersCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMessagesState ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMuted ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getOldMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getRead ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getReads ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getRecoveryNeeded ()Z
	public abstract fun getRepliedMessage ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getTyping ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getUnreadCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getWatcherCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getWatchers ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun toChannel ()Lio/getstream/chat/android/client/models/Channel;
}

public abstract class io/getstream/chat/android/offline/plugin/state/channel/MessagesState {
}

public final class io/getstream/chat/android/offline/plugin/state/channel/MessagesState$Loading : io/getstream/chat/android/offline/plugin/state/channel/MessagesState {
	public static final field INSTANCE Lio/getstream/chat/android/offline/plugin/state/channel/MessagesState$Loading;
}

public final class io/getstream/chat/android/offline/plugin/state/channel/MessagesState$NoQueryActive : io/getstream/chat/android/offline/plugin/state/channel/MessagesState {
	public static final field INSTANCE Lio/getstream/chat/android/offline/plugin/state/channel/MessagesState$NoQueryActive;
}

public final class io/getstream/chat/android/offline/plugin/state/channel/MessagesState$OfflineNoResults : io/getstream/chat/android/offline/plugin/state/channel/MessagesState {
	public static final field INSTANCE Lio/getstream/chat/android/offline/plugin/state/channel/MessagesState$OfflineNoResults;
}

public final class io/getstream/chat/android/offline/plugin/state/channel/MessagesState$Result : io/getstream/chat/android/offline/plugin/state/channel/MessagesState {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/getstream/chat/android/offline/plugin/state/channel/MessagesState$Result;
	public static synthetic fun copy$default (Lio/getstream/chat/android/offline/plugin/state/channel/MessagesState$Result;Ljava/util/List;ILjava/lang/Object;)Lio/getstream/chat/android/offline/plugin/state/channel/MessagesState$Result;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessages ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/offline/plugin/state/channel/thread/ThreadState {
	public abstract fun getEndOfOlderMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoadingOlderMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMessages ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getOldestInThread ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getParentId ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/offline/plugin/state/global/GlobalState {
	public abstract fun clearState ()V
	public abstract fun getBanned ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelMutes ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelUnreadCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getConnectionState ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getErrorEvents ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getInitialized ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getMuted ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getTotalUnreadCount ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getTypingUpdates ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getUser ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun isConnecting ()Z
	public abstract fun isInitialized ()Z
	public abstract fun isOffline ()Z
	public abstract fun isOnline ()Z
}

public abstract class io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData {
}

public final class io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$Loading : io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData {
	public static final field INSTANCE Lio/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$Loading;
}

public final class io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$NoQueryActive : io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData {
	public static final field INSTANCE Lio/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$NoQueryActive;
}

public final class io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$OfflineNoResults : io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData {
	public static final field INSTANCE Lio/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$OfflineNoResults;
}

public final class io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$Result : io/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$Result;
	public static synthetic fun copy$default (Lio/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$Result;Ljava/util/List;ILjava/lang/Object;)Lio/getstream/chat/android/offline/plugin/state/querychannels/ChannelsStateData$Result;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChannels ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/getstream/chat/android/offline/plugin/state/querychannels/QueryChannelsState {
	public abstract fun getChannels ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChannelsStateData ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getChatEventHandler ()Lio/getstream/chat/android/offline/event/handler/chat/ChatEventHandler;
	public abstract fun getCurrentRequest ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getEndOfChannels ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getFilter ()Lio/getstream/chat/android/client/api/models/FilterObject;
	public abstract fun getLoading ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getLoadingMore ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getNextPageRequest ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getRecoveryNeeded ()Lkotlinx/coroutines/flow/StateFlow;
	public abstract fun getSort ()Lio/getstream/chat/android/client/api/models/QuerySort;
	public abstract fun setChatEventHandler (Lio/getstream/chat/android/offline/event/handler/chat/ChatEventHandler;)V
}

public final class io/getstream/chat/android/offline/repository/database/internal/ChatDatabase_Impl {
	public static final field Companion Lio/getstream/chat/android/offline/repository/database/internal/ChatDatabase$Companion;
	public fun <init> ()V
	public fun attachmentDao ()Lio/getstream/chat/android/offline/repository/domain/message/attachment/internal/AttachmentDao;
	public fun channelConfigDao ()Lio/getstream/chat/android/offline/repository/domain/channelconfig/internal/ChannelConfigDao;
	public fun channelStateDao ()Lio/getstream/chat/android/offline/repository/domain/channel/internal/ChannelDao;
	public fun clearAllTables ()V
	public fun getAutoMigrations (Ljava/util/Map;)Ljava/util/List;
	public fun getRequiredAutoMigrationSpecs ()Ljava/util/Set;
	public fun messageDao ()Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;
	public fun queryChannelsDao ()Lio/getstream/chat/android/offline/repository/domain/queryChannels/internal/QueryChannelsDao;
	public fun reactionDao ()Lio/getstream/chat/android/offline/repository/domain/reaction/internal/ReactionDao;
	public fun syncStateDao ()Lio/getstream/chat/android/offline/repository/domain/syncState/internal/SyncStateDao;
	public fun userDao ()Lio/getstream/chat/android/offline/repository/domain/user/internal/UserDao;
}

public final class io/getstream/chat/android/offline/repository/domain/channel/internal/ChannelDao_Impl : io/getstream/chat/android/offline/repository/domain/channel/internal/ChannelDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun delete (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/channel/internal/ChannelEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertMany (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectAllCids (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectCidsBySyncNeeded (Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectSyncNeeded (Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setDeletedAt (Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setHidden (Ljava/lang/String;ZLjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setHidden (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/offline/repository/domain/channelconfig/internal/ChannelConfigDao_Impl {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/channelconfig/internal/ChannelConfigEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/offline/repository/domain/message/attachment/internal/AttachmentDao_Impl : io/getstream/chat/android/offline/repository/domain/message/attachment/internal/AttachmentDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun observeAttachmentsForMessage (Ljava/lang/String;)Lkotlinx/coroutines/flow/Flow;
}

public final class io/getstream/chat/android/offline/repository/domain/message/internal/MessageDao_Impl {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun deleteAttachments (Ljava/util/List;)V
	public fun deleteChannelMessagesBefore (Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun deleteMessage (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun messagesForChannel (Ljava/lang/String;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannel$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Ljava/lang/String;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelEqualOrNewerThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelEqualOrNewerThan$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelEqualOrOlderThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelEqualOrOlderThan$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelNewerThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelNewerThan$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun messagesForChannelOlderThan (Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun messagesForChannelOlderThan$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Ljava/lang/String;ILjava/util/Date;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectBySyncStatus (Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun selectBySyncStatus$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun selectIdsBySyncStatus (Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun selectIdsBySyncStatus$default (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageDao;Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun selectWaitForAttachments (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun upsertMessageInnerEntities (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun upsertMessageInnerEntity (Lio/getstream/chat/android/offline/repository/domain/message/internal/MessageInnerEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/offline/repository/domain/queryChannels/internal/QueryChannelsDao_Impl {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/queryChannels/internal/QueryChannelsEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/offline/repository/domain/reaction/internal/ReactionDao_Impl : io/getstream/chat/android/offline/repository/domain/reaction/internal/ReactionDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/reaction/internal/ReactionEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectIdsSyncStatus (Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectReactionById (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectReactionsByIds (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectSyncStatus (Lio/getstream/chat/android/client/utils/SyncStatus;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectUserReactionToMessage (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectUserReactionsToMessage (Ljava/lang/String;Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setDeleteAt (Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/offline/repository/domain/syncState/internal/SyncStateDao_Impl : io/getstream/chat/android/offline/repository/domain/syncState/internal/SyncStateDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/syncState/internal/SyncStateEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/getstream/chat/android/offline/repository/domain/user/internal/UserDao_Impl : io/getstream/chat/android/offline/repository/domain/user/internal/UserDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public static fun getRequiredConverters ()Ljava/util/List;
	public fun insert (Lio/getstream/chat/android/offline/repository/domain/user/internal/UserEntity;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertMany (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun select (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun selectAllUser (II)Ljava/util/List;
	public fun selectUsersLikeName (Ljava/lang/String;II)Ljava/util/List;
}

public class io/getstream/chat/android/offline/utils/Event {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getContentIfNotHandled ()Ljava/lang/Object;
	public final fun getHasBeenHandled ()Z
	public final fun peekContent ()Ljava/lang/Object;
}


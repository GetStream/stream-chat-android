import io.getstream.chat.android.Dependencies
import io.getstream.chat.android.Versions

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose'
}

apply from: "${rootDir}/scripts/android.gradle"
apply from: "${rootDir}/scripts/detekt-compose.gradle"

android {
    namespace "io.getstream.chat.android.guides"
    defaultConfig {
        applicationId "io.getstream.chat.android.guides"
        versionCode sampleAppVersionCode
        versionName sampleAppVersionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    lintOptions {
        disable 'MissingTranslation'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += [
                '-opt-in=kotlin.RequiresOptIn',
        ]
    }
}

dependencies {
    implementation project(":stream-chat-android-state")
    implementation project(":stream-chat-android-offline")
    implementation project(":stream-chat-android-ui-components")
    implementation project(":stream-chat-android-compose")

    implementation Dependencies.androidxCoreKtx
    implementation Dependencies.androidxAppCompat
    implementation Dependencies.materialComponents

    // Compose
    implementation Dependencies.composeUi
    implementation Dependencies.composeUiTooling
    implementation Dependencies.composeFoundation
    implementation Dependencies.composeMaterial
    implementation Dependencies.composeActivity
    implementation Dependencies.composeViewModel

    detektPlugins(Dependencies.detektFormatting)
}
